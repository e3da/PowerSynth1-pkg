(ipowercad.design.library_structures
Device
p0
(dp1
S'name'
p2
S'CPMF-1200-S080B SiC-MOS'
p3
sS'wire_landings'
p4
(lp5
(ipowercad.design.library_structures
BondwireLanding
p6
(dp7
S'position'
p8
(F4.4
F1.2
tp9
sS'bond_type'
p10
I2
sba(ipowercad.design.library_structures
BondwireLanding
p11
(dp12
g8
(F1.2
F2.0
tp13
sg10
I1
sba(ipowercad.design.library_structures
BondwireLanding
p14
(dp15
g8
(F2.4
F1.2
tp16
sg10
I1
sba(ipowercad.design.library_structures
BondwireLanding
p17
(dp18
g8
(F1.2
F0.4
tp19
sg10
I1
sbasS'device_model'
p20
S'// VerilogA for Power_MOS_models, CSD18540Q5B_v1, veriloga\n\n`include "constants.vams"\n`include "disciplines.vams"\n\nmodule CSD18540Q5B_v1 (d, g, s);\nparameter real cgs = 3.2e-9;\n//  parameter real tempc = 27;\n    parameter real q = 1.6021e-19;\n    parameter real eps = 8.5e-13;\n    parameter real k = 1.381e-23;\n    parameter real cds = 6.5e-9;\n    parameter real cgd0 = 1e-12;\n    parameter real coxd = 320e-12;\n    parameter real vtd = 0.01;\n    parameter real fc = 0 from [0:0.95];\n    parameter real mScale = 0.52 from [0:0.7];\n    parameter real wb = 150e-6;\n    parameter real nb = 8.3e14;\n    parameter real a = 3.416e-1;\n    parameter real agd = 2.33e-2;\n    parameter real theta = 0.0;\n    parameter real thetal = 0.0;\n    parameter real thetatexp = 0;\n    parameter real thetaltexp = 0;\n    parameter real rs = 1e-6;\n    parameter real kfh = 1;\n    parameter real kfhtexp = 0;\n    parameter real kph = 1;\n    parameter real kphtexp = 0;\n    parameter real kfl = 0.265;\n    parameter real kfltexp = 0;\n    parameter real kpl = 170;\n    parameter real kpltexp = 0;\n    parameter real vth = 2.45;\n    parameter real vthtexp = 0;\n    parameter real vtdtexp = 0;\n    parameter real vbigd = 0.1;\n    parameter real pvf = 0.52;\n    parameter real fxjbe = 0.5;\n    parameter real fxjbm = 0.75;\n    parameter real vtl = 2.45;\n    parameter real vtltexp = 0;\n    parameter real slmin = 1e-9;\n    parameter real va = 50;\n    parameter real vatexp = 0;\n    parameter real isr = 0;\n    parameter real vpr = 0;\n    parameter real id0 = 0;\n    parameter real vb = 70;\n    parameter real vgstheta = 0;\n    parameter real xtheta = 0.0;\n    parameter real xthetatexp = 1.6e-3;\n\tparameter real cgdmod = 1;\n\n    inout d;\n    electrical d;\n    inout g;\n    electrical g;\n    inout s;\n    electrical s;\n\n    electrical di;\n//    electrical N2;\n//    electrical N3;\n\t\n    real ads;\n    real ni;\n    real mun;\n    real kph_t;\n    real kfh_t;\n    real kpl_t;\n    real kfl_t;\n    real theta_t;\n    real thetal_t;\n    real va_t;\n    real vtk;\n    real yh;\n    real pvf_half;\n    real yl;\n    real vth_t;\n    real vtl_t;\n    real vtd_t;\n    real vbi;\n    real f2;\n    real f3;\n    real vdg;\n    real vgs;\n    real vdds;\n    real vddn;\n    real vgd;\n    real vds;\n    real cdsdep;\n    real qcdsj;\n    real wdsj;\n    real wgdj;\n    real cgd;\n    real qcdg;\n    real cgdj;\n    real cgsf;\n    real qcgs;\n    real ciss;\n    real coss;\n    real crss;\n    real w;\n    real rb;\n    real irbs;\n    real idiode;\n    real imosh;\n    real imosl;\n    real ibreakdown;\n    real mufact;\n    real imos;\n    real temp;\n    real tref;\n    real xtheta_t;\n    real toxtemp;\n    real flag;\n\n    branch (d, di) d_di;\n    branch (di, s) di_s;\n    branch (g, di) g_di;\n    branch (g, s) g_s;\n    //branch (N2, N3) dummy;\n\n    analog begin\n        // pragma lynguent code fragment "Parameters"\n         // Original -> Verilog A Synonym\n         // vttco -> vthtexp\n         // vtdtco -> vtdtexp\n         // vtltco -> vtltexp\n         // vaexp -> vatexp\n         // is -> isr\n         // VB -> vb\n         // vt -> vtk\n         // model->vt -> vth\n         // vt_t -> vth_t\n\t\ttemp = $temperature;\n\t\ttref = 300;\n\t\tif (temp <=223) temp = 223;\n\t\t\n//\t\tif (m<0.3) m = 0.3\n//\t\telse if(m>0.7) m = 0.7\n\t\t\t\t\t\n        ads = a - agd;\n        if (ads <= 0)\n            ads = 0.2 * agd;\n\t\t\t\n//        ni = 1.7e16 * (pow(temp, 1.5)) * exp(-2.08e4 / temp);\n//        mun = 947 / (1 + pow((nb / 1.94e17), 0.61)) * pow((temp / 300), -2.15);\n\t\t\n\t\tni = 3.88e16 * (pow(temp,1.5)/exp(7000/temp));\n\t\tmun = (5.1e18 + 92*pow(nb, 0.91))/(3.75e15 + pow(nb, 0.91)) * pow((300/(temp)), 2.5);\n\t\t\n        kph_t = kph * pow((tref/temp),kphtexp);\n        kfh_t = kfh * pow((tref/temp),kfhtexp);\n        kpl_t = kpl * pow((tref/temp),kpltexp);\n        kfl_t = kfl * pow((tref/temp),kfltexp);\n\t\t\n        theta_t = theta * pow((tref/temp), thetatexp);\n        thetal_t = thetal * pow((tref/temp), thetaltexp);\n\t\tif(theta_t<=0) theta_t = 0;\n\t\tif(thetal_t<=0) thetal_t = 0;\n\t\t\n\t\txtheta_t = xtheta + (temp-tref)*xthetatexp;\n        va_t = va - vatexp*(temp-tref);\n        vtk = $vt;\n        if (va_t <= 0)\n            va_t = 1e-20;\n\t\t\t\n        pvf_half = pvf / 2;\n        if (kfh_t-pvf_half==0)\n            yh = kfh_t / 0.000001;\n        else\n            yh = (kfh_t / (kfh_t - pvf_half));\n        if (kfl_t-pvf_half==0)\n            yl = kfl_t / 0.000001;\n        else\n            yl = (kfl_t / (kfl_t - pvf_half));\n        vth_t = vth + vthtexp * (temp - tref);\n        vtl_t = vtl + vtltexp * (temp - tref);\n        vtd_t = vtd + vtdtexp * (temp - tref);\n        vbi = vtk * ln((nb * 1e16 / (pow(ni, 2))));\n        // pragma lynguent code fragment "Values"\n        vdg = -V(g_di);\n        vgs = V(g_s);\n        vdds = V(d_di) + V(di_s);\n        vddn = V(d_di);\n        vgd = -vdg;\n\t\tvds = V(di_s);\n        //vds = V(dummy);\n         // Drain to Source New Capacitance\n        if ((vds + vbi) > 0)\n        begin\n            cdsdep = cds * pow((vbi / (vbi + vds)), mScale);\n            qcdsj = cds * (pow(vbi, mScale)) * (pow((vbi + vds), (1 - mScale)) - pow(vbi, (1 - mScale))) / (1 - mScale);\n        end\n        else\n        begin\n            cdsdep = cds;\n            qcdsj = cdsdep * vds;\n        end\n        if ((vds + vbi) >= 0)\n            wdsj = sqrt((2 * eps * (vds + vbi)) / (q * nb));\n        else\n            wdsj = 0;\n         // Mihir Changes Implemented\n         // Asymptotic fitting for two phase gate-drain capacitance\n        if (cgdmod == 1)\n\t\tbegin\n\t\t\tif (((vdg + vtd_t) <= (q * nb * eps * (pow(agd, 2)) / 200 * (pow(coxd, -2)))))\n\t\t\tbegin\n\t\t\t\twgdj = 0;\n\t\t\t\tcgd = coxd;\n\t\t\t\tqcdg = coxd * vdg;\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\twgdj = sqrt((2 * eps * (vdg + vtd_t) / (q * nb)));\n\t\t\t\tcgdj = eps * agd / wgdj;\n\t\t\t\tcgd = coxd * cgdj / (coxd + cgdj);\n\t\t\t\tqcdg = cgd*vdg;\n\t\t\t\t//qcdg = 2 * eps * agd * sqrt((q * nb) / (2 * eps)) * (sqrt(vdg + vtd_t) - sqrt(vtd_t));\n\t\t\tend\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\ttoxtemp = eps * agd / coxd;\n\t\t\tif (vdg <= -vtd_t)\n\t\t\t\twgdj = 0;\n\t\t\telse\n\t\t\t\twgdj = sqrt((2 * eps * (vdg + vtd_t) / (q * nb)));\n\t\t\t\n\t\t\tcgd = eps * agd / (toxtemp + wgdj);\n\t\t\tqcdg = cgd * vdg;\n\t\tend\t\n        // Gate to source capacitance\n        cgsf = cgs;\n        qcgs = cgsf * vgs;\n         // Datasheet capacitances\n        ciss = cgd + cgsf;\n        coss = cgd + cdsdep;\n        crss = cgd;\n         // IRBS\n         // Calculate depletion widths\n        w = wb - wdsj;\n        if (w < 0)\n            w = 0;\n         //Calculation of RB and IRBS\n        rb = (w / (q * a * nb * mun));\n        irbs = 0;\n        if (rb <= 0)\n            irbs = vddn / rs;\n        else\n            irbs = vddn / (rb + rs);\n         // IMOS\n         // Soft voltage thresholds section omitted\n         // sub-current omitted\n        idiode = 0;\n        imosh = 0;\n        imosl = 0;\n        ibreakdown = 0;\n\t\t// MOSFET current calculation\n       // if ((vds >= 0) && (vdds >= 0))\n       // begin\n         //   ibreakdown = id0 * exp(-1 * (vb - vds) / vtk);\n\n\t   if (vgs > vtl_t)\n            begin\n\t\tif (vds<0) \n\t\t    flag=-1;\n\t\telse \n\t\t    flag = 1;                \n\t\t// IMOS low current\n                if (abs(vds) <= ((vgs - vtl_t) / pvf))\n                    imosl = flag*((kfl_t * kpl_t * ((vgs - vtl_t) * abs(vds) - ((pow(pvf, (yl - 1))) * (pow(abs(vds), yl)) * pow((vgs - vtl_t), ((2 - yl))) /\n                    yl)) / (1 + thetal_t * (vgs - vtl_t))));\n                else\n                    imosl = flag*(((kpl_t * (pow((vgs - vtl_t), 2))) / (2 * (1 + thetal_t * (vgs - vtl_t)))));\n            end\n            if (vgs >= vth_t)\n            begin\n                 // IMOS high current\n                if (abs(vds) <= ((vgs - vth_t) / pvf))\n                    imosh = flag*((kfh_t * kph_t * ((vgs - vth_t) * abs(vds) - ((pow(pvf, (yh - 1))) * (pow(abs(vds), yh)) * pow((vgs - vth_t), ((2 - yh))) /\n                    yh)) / (1 + theta_t * (vgs - vth_t))));\n                else\n                    imosh = flag*(((kph_t * (pow((vgs - vth_t), 2))) / (2 * (1 + theta_t * (vgs - vth_t)))));\n            end\n\t\t\t\n            // Mobility reduction factor\n            if (vgs >= vtl_t)\n                mufact = 1 + theta_t * (vgs - vtl_t);\n            else\n                mufact = 1;\n            if (mufact < 0.0001)\n                mufact = 0.0001;\n            imosl = imosl / mufact;\n            if (vgs >= vth)\n                mufact = 1 + theta_t * (vgs - vth_t);\n            else\n                mufact = 1;\n            if (mufact < 0.0001)\n                mufact = 0.0001;\n            imosh = imosh / mufact;\n        /*end\n        else\n        begin\n            if (vds < 0)\n                idiode = -1 * isr * (exp(-vds / vtk) - 1);\n            else\n                idiode = 0;\n        end */\n        imos = imosh + imosl + ibreakdown + idiode;\n        I(g_di) <+ -ddt(qcdg);\n        I(g_s) <+ ddt(qcgs);\n        I(di_s) <+ imos + ddt(qcdsj);\n        I(d_di) <+ irbs;\n        //V(dummy): V(dummy)==V(di_s);\n    end\nendmodule\n'
p21
sS'power_side'
p22
I1
sS'device_type'
p23
I1
sS'properties'
p24
(ipowercad.design.library_structures
MaterialProperties
p25
(dp26
g2
S'SiC'
p27
sS'density'
p28
F3200.0
sS'electrical_res'
p29
NsS'rel_permeab'
p30
NsS'rel_permit'
p31
NsS'thermal_cond'
p32
F120.0
sS'spec_heat_cap'
p33
F750.0
sbsS'dimensions'
p34
(F4.8
F2.4
F0.35
tp35
sb.